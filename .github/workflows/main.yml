name: 'Update schedule'

on:
  schedule:
    - cron: '0 22,10 * * *'
  workflow_dispatch:
    branches:
      - master
      - dev
      - gd
jobs:
  push:
    runs-on: ${{ matrix.operating-system }}
    timeout-minutes: 120
    strategy:
      matrix:
        operating-system: [ 'ubuntu-latest' ]
    steps:
      - name: Set branch name
        id: vars
        run: echo "BRANCH_NAME=${{ github.repository_owner == 'Guovin' && 'gd' || 'master' }}" >> $GITHUB_ENV
      - uses: actions/checkout@v3
        with:
          ref: ${{ env.BRANCH_NAME }}
      - name: Run with setup-python 3.13
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'
          update-environment: true
          cache: 'pipenv'
      - name: Check open_driver config
        id: check_driver
        run: |
          echo "OPEN_DRIVER=$(python -c '
          try:
            from utils.config import config
            open_driver = config.open_driver
          except:
            open_driver = False
          print(open_driver)')" >> $GITHUB_ENV
      - name: Set up Chrome
        if: env.OPEN_DRIVER == 'True'
        uses: browser-actions/setup-chrome@latest
        with:
          chrome-version: stable
      - name: Download chrome driver
        if: env.OPEN_DRIVER == 'True'
        uses: nanasess/setup-chromedriver@master
      - name: Install FFmpeg
        run: sudo apt-get update && sudo apt-get install -y ffmpeg
      - name: Install pipenv
        run: pip3 install --user pipenv
      - name: Install dependecies
        run: pipenv --python 3.13 && pipenv install --deploy
      - name: Install selenium
        if: env.OPEN_DRIVER == 'True'
        run: pipenv install selenium
      - name: Update
        run: pipenv run dev
      - name: Commit and push if changed
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add .
          if ! git diff --staged --quiet; then
            git commit -m "Github Action Auto Updated"
            git push --force
          fi
          
      - name: Sync to Cloudflare KV
        if: success()
        run: |
          final_m3u_file=$(python -c '
          try: 
            from utils.config import config
            import os
            final_file = config.final_file
            final_m3u_file = os.path.splitext(final_file)[0] + ".m3u"
            key_name = "result"
          except: 
            final_m3u_file = "output/result.m3u"
            key_name = "result"
          print(f"{key_name}|{final_m3u_file}")')
          
          # 分割输出得到key_name和file_path
          IFS='|' read -r key_name file_path <<< "$final_m3u_file"
          
          if [[ -f "$file_path" ]]; then
            # 将内容写入临时文件
            TMP_FILE=$(mktemp)
            cat "$file_path" > "$TMP_FILE"
            
            # 使用临时文件上传
            curl -X PUT "https://api.cloudflare.com/client/v4/accounts/${{ secrets.CF_ACCOUNT_ID }}/storage/kv/namespaces/${{ secrets.CF_NAMESPACE_ID }}/values/$key_name" \
              -H "Authorization: Bearer ${{ secrets.CF_API_TOKEN }}" \
              -H "Content-Type: text/plain" \
              --data-binary "@$TMP_FILE"
            
            # 删除临时文件
            rm "$TMP_FILE"
          fi
